"use strict";(self.webpackChunkkkapi_doc=self.webpackChunkkkapi_doc||[]).push([[800],{3617:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-2e09e0f2",path:"/posts/ispeak/init-params.html",title:"初始化参数",lang:"zh-CN",frontmatter:{icon:"edit",date:"2022-02-27T00:00:00.000Z",category:["ISpeak"],title:"初始化参数",summary:"",head:[["meta",{property:"og:url",content:"https://kkapi-doc.kkfive.top/posts/ispeak/init-params.html"}],["meta",{property:"og:title",content:"初始化参数"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{property:"article:published_time",content:"2022-02-27T00:00:00.000Z"}]]},excerpt:"",headers:[],git:{createdTime:1661075057e3,updatedTime:1661075057e3,contributors:[{name:"DreamyTZK",email:"i@tzki.cn",commits:1}]},readingTime:{minutes:.52,words:156},filePathRelative:"posts/ispeak/init-params.md"}},9063:(n,s,a)=>{a.r(s),a.d(s,{default:()=>r});var e=a(6252);const p={class:"language-typescript ext-ts line-numbers-mode"},t=[(0,e.uE)('<pre class="language-typescript"><code><span class="token comment">// 初始化函数参数定义</span>\n<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">initOptions</span> <span class="token punctuation">{</span>\n  <span class="token comment">// 绑定的标签</span>\n  el<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// api地址</span>\n  api<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// ispeak作者</span>\n  author<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// 每页speak显示的条数</span>\n  pageSize<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span>\n  <span class="token comment">// 懒加载失败时显示的图像</span>\n  fail_img<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// loading的图片</span>\n  loading_img<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// speak页面路径</span>\n  speakPage<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  githubClientId<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// 是否隐藏评论按钮</span>\n  hideComment<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span>\n  <span class="token comment">// 初始化评论的回调函数</span>\n  comment<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>speak<span class="token operator">:</span> SpeakType<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span>\n  <span class="token comment">// 创建div标签时的类名</span>\n  commentClass<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token comment">// 第一个评论的类型 4.4.0之后废弃</span>\n  initCommentName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// 评论选项 4.4.0之后废弃</span>\n  initCommentOptions<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>\n  <span class="token comment">// 全局对象类型的评论 4.4.0之后废弃</span>\n  globalCommentName<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token comment">// 评论选项 4.4.0之后废弃</span>\n  globalCommentOptions<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div>',2)],o={},r=(0,a(3744).Z)(o,[["render",function(n,s){return(0,e.wg)(),(0,e.iD)("div",p,t)}]])}}]);
"use strict";(self.webpackChunkkkapi_doc=self.webpackChunkkkapi_doc||[]).push([[2425],{7254:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-847cda7e",path:"/posts/ispeak/front.html",title:"快速开始",lang:"zh-CN",frontmatter:{icon:"edit",date:"2022-02-27T00:00:00.000Z",category:["ISpeak"],title:"快速开始",summary:"说明 此部分介绍 ispeak 发送方式。 设置 Token 在外部发送为了验证主人身份，因此需要在后台->设置->个人设置 中设置一个 speak token。 查看个人 ID 通过网页端发送哔哔 进入ispeak-biubiu页面，首先配置基础配置。 接下来在发布设置中撰写你要发布的内容即可 发布成功后即可在后台管理中看到刚刚发布的 speak 博客前端",head:[["meta",{property:"og:url",content:"https://kkapi-doc.kkfive.top/posts/ispeak/front.html"}],["meta",{property:"og:title",content:"快速开始"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{property:"article:published_time",content:"2022-02-27T00:00:00.000Z"}]]},excerpt:"",headers:[{level:2,title:"说明",slug:"说明",children:[]},{level:2,title:"设置 Token",slug:"设置-token",children:[]},{level:2,title:"查看个人 ID",slug:"查看个人-id",children:[]},{level:2,title:"通过网页端发送哔哔",slug:"通过网页端发送哔哔",children:[]},{level:2,title:"博客前端方案",slug:"博客前端方案",children:[{level:3,title:"ispeak 的方案",slug:"ispeak-的方案",children:[]}]},{level:2,title:"发送 speak 的方式",slug:"发送-speak-的方式",children:[]},{level:2,title:"自定义发送 Speak",slug:"自定义发送-speak",children:[{level:3,title:"获取 speak-tag",slug:"获取-speak-tag",children:[]},{level:3,title:"通过 token 发送 speak 姿势",slug:"通过-token-发送-speak-姿势",children:[]}]},{level:2,title:"开启 GitHub 认证",slug:"开启-github-认证",children:[]}],git:{createdTime:1661075057e3,updatedTime:1661075057e3,contributors:[{name:"DreamyTZK",email:"i@tzki.cn",commits:1}]},readingTime:{minutes:3.74,words:1122},filePathRelative:"posts/ispeak/front.md"}},8179:(n,s,a)=>{a.r(s),a.d(s,{default:()=>W});var p=a(6252);const t=(0,p.uE)('<h2 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h2><p>此部分介绍 ispeak 发送方式。</p><h2 id="设置-token" tabindex="-1"><a class="header-anchor" href="#设置-token" aria-hidden="true">#</a> 设置 Token</h2><p>在外部发送为了验证主人身份，因此需要在后台-&gt;设置-&gt;个人设置 中设置一个 speak token。</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227121231.png" alt="image-20220227121231377" loading="lazy"></p><h2 id="查看个人-id" tabindex="-1"><a class="header-anchor" href="#查看个人-id" aria-hidden="true">#</a> 查看个人 ID</h2><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227131425.png" alt="image-20220227131425769" loading="lazy"></p><h2 id="通过网页端发送哔哔" tabindex="-1"><a class="header-anchor" href="#通过网页端发送哔哔" aria-hidden="true">#</a> 通过网页端发送哔哔</h2>',8),e=(0,p.Uk)("进入"),o={href:"https://ispeak-biubiu.vercel.app/",target:"_blank",rel:"noopener noreferrer"},l=(0,p.Uk)("ispeak-biubiu"),c=(0,p.Uk)("页面，首先配置基础配置。"),r=(0,p.uE)('<p><img src="https://file.acs.pw/picGo/2022/02/27/20220227131551.png" alt="image-20220227131551738" loading="lazy"></p><p>接下来在发布设置中撰写你要发布的内容即可</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227131630.png" alt="image-20220227131630594" loading="lazy"></p><p>发布成功后即可在后台管理中看到刚刚发布的 speak</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227131747.png" alt="image-20220227131747202" loading="lazy"></p><h2 id="博客前端方案" tabindex="-1"><a class="header-anchor" href="#博客前端方案" aria-hidden="true">#</a> 博客前端方案</h2><h3 id="ispeak-的方案" tabindex="-1"><a class="header-anchor" href="#ispeak-的方案" aria-hidden="true">#</a> ispeak 的方案</h3>',7),u=(0,p.Uk)("博客前端项目："),i={href:"https://github.com/kkfive/iSpeak/",target:"_blank",rel:"noopener noreferrer"},k=(0,p.Uk)("ISpeak"),b=(0,p.Uk)("演示参考："),m={href:"https://www.antmoe.com/speak/",target:"_blank",rel:"noopener noreferrer"},d=(0,p.Uk)("小康博客"),g=(0,p._)("h4",{id:"快速开始",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#快速开始","aria-hidden":"true"},"#"),(0,p.Uk)(" 快速开始")],-1),h=(0,p._)("blockquote",null,[(0,p._)("p",null,"ipseak 使用 marked 依赖和 highlight 依赖，为了减少打包体积，并没有将该依赖打包，因此需要使用 cdn 进行外部引入。")],-1),q=(0,p.Uk)("参考如下（以"),y={href:"https://artalk.js.org/",target:"_blank",rel:"noopener noreferrer"},f=(0,p.Uk)("Artalk"),v=(0,p.Uk)("评论为例）"),_=(0,p.uE)('<div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tip<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>ipseak加载中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ispeak<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.staticfile.org/highlight.js/10.6.0/styles/atom-one-dark.min.css<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span>\n  <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span>\n  <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/ispeak@4.4.0/style.css<span class="token punctuation">&quot;</span></span>\n<span class="token punctuation">/&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.staticfile.org/highlight.js/10.6.0/highlight.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.staticfile.org/marked/2.0.0/marked.min.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://cdn.jsdelivr.net/npm/ispeak@4.4.0/ispeak.umd.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!-- CSS --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/artalk@2.3.4/dist/Artalk.css<span class="token punctuation">&quot;</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token comment">&lt;!-- JS --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://unpkg.com/artalk@2.3.4/dist/Artalk.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">var</span> head <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&#39;head&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n  <span class="token keyword">var</span> meta <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;meta&#39;</span><span class="token punctuation">)</span>\n  meta<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;referrer&#39;</span>\n  meta<span class="token punctuation">.</span>content <span class="token operator">=</span> <span class="token string">&#39;no-referrer&#39;</span>\n  head<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>meta<span class="token punctuation">)</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>ispeak<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    ispeak\n      <span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;#ispeak&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">api</span><span class="token operator">:</span> <span class="token string">&#39;https://kkapi-dev.vercel.app/&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;61fe93508fd621d39a155725&#39;</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">pageSize</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>\n        <span class="token literal-property property">loading_img</span><span class="token operator">:</span> <span class="token string">&#39;https://bu.dusays.com/2021/03/04/d2d5e983e2961.gif&#39;</span><span class="token punctuation">,</span>\n        <span class="token function-variable function">comment</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">speak</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n          <span class="token comment">// 4.4.0 之后在此回调函数中初始化评论</span>\n          <span class="token keyword">const</span> <span class="token punctuation">{</span> _id<span class="token punctuation">,</span> title<span class="token punctuation">,</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> speak\n          <span class="token keyword">const</span> contentSub <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span>\n          <span class="token keyword">new</span> <span class="token class-name">Artalk</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n            <span class="token literal-property property">el</span><span class="token operator">:</span> <span class="token string">&#39;.ispeak-comment&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 默认情况下 ipseak 生成class为 ispeak-comment 的div</span>\n            <span class="token literal-property property">pageKey</span><span class="token operator">:</span> <span class="token string">&#39;/speak/info.html/#/&#39;</span> <span class="token operator">+</span> _id<span class="token punctuation">,</span> <span class="token comment">// 手动传入当前speak的唯一id</span>\n            <span class="token literal-property property">pageTitle</span><span class="token operator">:</span> title <span class="token operator">||</span> contentSub<span class="token punctuation">,</span> <span class="token comment">// 手动传入当前speak的标题(由于content可能过长，因此截取前30个字符)</span>\n            <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token string">&#39;https://api.antmoe.com/artalk/&#39;</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">site</span><span class="token operator">:</span> <span class="token string">&#39;speak&#39;</span> <span class="token comment">// 你的站点名</span>\n          <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">}</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;ispeak 加载完成&#39;</span><span class="token punctuation">)</span>\n        document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;tip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span>\n      <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>\n    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;tip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">&#39;ipseak依赖加载失败！&#39;</span>\n  <span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div>',1),w=(0,p.Uk)("ispeak 配置项 scheam 参考：https://github.com/kkfive/ISpeak/blob/master/src/types/parameter.ts或者"),I=(0,p.Uk)("/posts/ispeak/init-params.html"),x=(0,p.Uk)("优先以前者为准"),E=(0,p._)("div",{class:"custom-container warning"},[(0,p._)("p",{class:"custom-container-title"},"注意"),(0,p._)("p",null,"关于评论一直没有找到合适的通用解决方案，因此关于评论配置名称后期可能会做出调整。因此为了不影响使用，请指定版本号引入相关静态资源")],-1),T=(0,p._)("h2",{id:"发送-speak-的方式",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#发送-speak-的方式","aria-hidden":"true"},"#"),(0,p.Uk)(" 发送 speak 的方式")],-1),U=(0,p.Uk)("参考："),S=(0,p.Uk)("发送及管理端"),j=(0,p._)("h2",{id:"自定义发送-speak",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#自定义发送-speak","aria-hidden":"true"},"#"),(0,p.Uk)(" 自定义发送 Speak")],-1),C=(0,p._)("p",null,"如果上述中的方案没有你所需要的方案，你完全可以进行自己开发。开发中只需要注意如下问题即可。",-1),N=(0,p._)("ul",null,[(0,p._)("li",null,'与传统"哔哔"不同的是发送哔哔的 tag 为必填项，并且需要通过接口去获取。')],-1),A=(0,p._)("h3",{id:"获取-speak-tag",tabindex:"-1"},[(0,p._)("a",{class:"header-anchor",href:"#获取-speak-tag","aria-hidden":"true"},"#"),(0,p.Uk)(" 获取 speak-tag")],-1),G=(0,p._)("ul",null,[(0,p._)("li",null,[(0,p.Uk)("url:"),(0,p._)("code",null,"/ispeak/tag/list?userId=用户id")])],-1),P=(0,p.Uk)("例如："),z={href:"https://kkapi-open.vercel.app/api/ispeak/tag/list?userId=6214e53ffffe384c0230910d",target:"_blank",rel:"noopener noreferrer"},B=(0,p.Uk)("链接"),H=(0,p.uE)('<ul><li><p>返回值</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;621792fd8bfa81f9b5666c18&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;createAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-02-24T14:13:20.084Z&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;orderNo&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6214e53ffffe384c0230910d&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;bgColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;__v&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n      <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6219877c43b7434215ae9b66&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;createAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-02-26T01:42:58.567Z&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Excepteur ut labore mollit&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;orderNo&quot;</span><span class="token operator">:</span> <span class="token number">34</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;user&quot;</span><span class="token operator">:</span> <span class="token string">&quot;6214e53ffffe384c0230910d&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;bgColor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;green&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;做支关引要&quot;</span><span class="token punctuation">,</span>\n      <span class="token property">&quot;__v&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请求成功&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">0</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></li></ul><h3 id="通过-token-发送-speak-姿势" tabindex="-1"><a class="header-anchor" href="#通过-token-发送-speak-姿势" aria-hidden="true">#</a> 通过 token 发送 speak 姿势</h3><ul><li><p>url:<code>/ispeak/addByToken</code></p></li><li><p>body</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>\n  <span class="token property">&quot;token&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;sint dolore veniam non&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;tag&quot;</span><span class="token operator">:</span> <span class="token string">&quot;621792fd8bfa81f9b5666c18&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;showComment&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">,</span>\n  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;那可口任或&quot;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul><p>发送哔哔所需要的参数 schema</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Ispeak</span> <span class="token punctuation">{</span>\n  <span class="token doc-comment comment">/**\n   * 标题\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  title<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token doc-comment comment">/**\n   * 内容\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsNotEmpty</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;内容为必填项目哦！&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> String<span class="token punctuation">,</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  content<span class="token operator">:</span> <span class="token builtin">string</span>\n  <span class="token doc-comment comment">/**\n   * 类型 0全部人可见 1仅登录可见 2仅自己可见\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;0&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  type<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsNotEmpty</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    message<span class="token operator">:</span> <span class="token string">&#39;标签为必填项目&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    type<span class="token operator">:</span> mongoose<span class="token punctuation">.</span>Schema<span class="token punctuation">.</span>Types<span class="token punctuation">.</span>ObjectId<span class="token punctuation">,</span>\n    ref<span class="token operator">:</span> ISpeakModelName<span class="token punctuation">.</span>ISpeakTagList<span class="token punctuation">,</span>\n    required<span class="token operator">:</span> <span class="token boolean">true</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  tag<span class="token operator">:</span> IspeakTag\n\n  <span class="token doc-comment comment">/**\n   * 展示评论可被评论 0不可以被评论 1可以被评论\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> type<span class="token operator">:</span> String<span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  showComment<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p>tag 的 schema 定义</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">IspeakTag</span> <span class="token punctuation">{</span>\n  <span class="token doc-comment comment">/**\n   * 标签名称\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">IsNotEmpty</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> message<span class="token operator">:</span> <span class="token string">&#39;标签名称为必填项&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> required<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  name<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token doc-comment comment">/**\n   * 标签背景颜色\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;#DB2828&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  bgColor<span class="token operator">:</span> <span class="token builtin">string</span>\n\n  <span class="token doc-comment comment">/**\n   * 排序\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  orderNo<span class="token operator">:</span> <span class="token builtin">number</span>\n\n  <span class="token doc-comment comment">/**\n   * 标签描述\n   */</span>\n  <span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n  description<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="开启-github-认证" tabindex="-1"><a class="header-anchor" href="#开启-github-认证" aria-hidden="true">#</a> 开启 GitHub 认证</h2><p>Ispeak 发送的 speak 包含登录可见、公开可见和仅作者可见。因此使用 GitHub 作为一键认证，实现此功能。</p><p>初始化参数时填入一下两个字段即可。</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">params</span> <span class="token punctuation">{</span>\n  <span class="token comment">// speak页面路径</span>\n  speakPage<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 例如 ‘/speak’</span>\n  githubClientId<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token comment">// 通过创建GitHub app获取</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><blockquote><p>此功能需要 kkapi 填入相关环境变量：GITHUB_CLIENT_ID 和 GITHUB_CLIENT_SECRET。</p><p>博主 id 需要在 kkadmin 后台手动填入。</p></blockquote>',12),D={},W=(0,a(3744).Z)(D,[["render",function(n,s){const a=(0,p.up)("ExternalLinkIcon"),D=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[t,(0,p._)("p",null,[e,(0,p._)("a",o,[l,(0,p.Wm)(a)]),c]),r,(0,p._)("p",null,[u,(0,p._)("a",i,[k,(0,p.Wm)(a)])]),(0,p._)("p",null,[b,(0,p._)("a",m,[d,(0,p.Wm)(a)])]),g,h,(0,p._)("p",null,[q,(0,p._)("a",y,[f,(0,p.Wm)(a)]),v]),_,(0,p._)("p",null,[w,(0,p.Wm)(D,{to:"/posts/ispeak/init-params.html"},{default:(0,p.w5)((()=>[I])),_:1}),x]),E,T,(0,p._)("p",null,[U,(0,p.Wm)(D,{to:"/posts/ispeak/#%E5%8F%91%E9%80%81%E5%8F%8A%E7%AE%A1%E7%90%86%E7%AB%AF"},{default:(0,p.w5)((()=>[S])),_:1})]),j,C,N,A,G,(0,p._)("p",null,[P,(0,p._)("a",z,[B,(0,p.Wm)(a)])]),H],64)}]])}}]);
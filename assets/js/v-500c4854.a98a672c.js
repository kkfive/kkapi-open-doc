"use strict";(self.webpackChunkkkapi_doc=self.webpackChunkkkapi_doc||[]).push([[3360],{3381:(e,l,a)=>{a.r(l),a.d(l,{data:()=>i});const i={key:"v-500c4854",path:"/guide/setup/deploy.html",title:"部署项目",lang:"zh-CN",frontmatter:{icon:"code",category:["快速开始"],isOriginal:!1,title:"部署项目",summary:"获取源代码 进入https://github.com/kkfive/kkapi-open项目，点击右上角的 fork。 接下来此项目将会同步到你的仓库中。 并在以下部署姿势中任选其一选择部署即可。 第一种部署姿势：Vercel 部署 1. 注册 Vercel 账号，推荐使用 GitHub 账户注册。 2. 进入Vercel，选择导入并找到刚刚 fork 的项",head:[["meta",{property:"og:url",content:"https://kkapi-doc.kkfive.top/guide/setup/deploy.html"}],["meta",{property:"og:title",content:"部署项目"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"zh-CN"}],["meta",{name:"twitter:card",content:"summary_large_image"}]]},excerpt:"",headers:[{level:2,title:"获取源代码",slug:"获取源代码",children:[]},{level:2,title:"第一种部署姿势：Vercel 部署",slug:"第一种部署姿势-vercel-部署",children:[]},{level:2,title:"第二种部署姿势：服务器部署",slug:"第二种部署姿势-服务器部署",children:[]},{level:2,title:"第三种部署姿势：docker 部署",slug:"第三种部署姿势-docker-部署",children:[]},{level:2,title:"密码丢失",slug:"密码丢失",children:[]},{level:2,title:"GitHub 认证",slug:"github-认证",children:[]}],git:{createdTime:1661075057e3,updatedTime:1661075057e3,contributors:[{name:"DreamyTZK",email:"i@tzki.cn",commits:1}]},readingTime:{minutes:2.2,words:659},filePathRelative:"guide/setup/deploy.md"}},3087:(e,l,a)=>{a.r(l),a.d(l,{default:()=>U});var i=a(6252);const n=(0,i._)("h2",{id:"获取源代码",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#获取源代码","aria-hidden":"true"},"#"),(0,i.Uk)(" 获取源代码")],-1),p=(0,i.Uk)("进入"),t={href:"https://github.com/kkfive/kkapi-open",target:"_blank",rel:"noopener noreferrer"},r=(0,i.Uk)("https://github.com/kkfive/kkapi-open"),c=(0,i.Uk)("项目，点击右上角的 fork。 接下来此项目将会同步到你的仓库中。 并在以下部署姿势中任选其一选择部署即可。"),o=(0,i._)("h2",{id:"第一种部署姿势-vercel-部署",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#第一种部署姿势-vercel-部署","aria-hidden":"true"},"#"),(0,i.Uk)(" 第一种部署姿势：Vercel 部署")],-1),s=(0,i._)("li",null,[(0,i._)("p",null,"注册 Vercel 账号，推荐使用 GitHub 账户注册。")],-1),d=(0,i.Uk)("进入"),u={href:"https://vercel.com/new",target:"_blank",rel:"noopener noreferrer"},h=(0,i.Uk)("Vercel"),m=(0,i.Uk)("，选择导入并找到刚刚 fork 的项目。"),g=(0,i._)("p",null,[(0,i._)("img",{src:"https://file.acs.pw/picGo/2022/02/27/20220227090529.png",alt:"",loading:"lazy"})],-1),k=(0,i._)("li",null,[(0,i._)("p",null,[(0,i.Uk)("点击导入后在 url 的末尾添加"),(0,i._)("code",null,"/tree/vercel"),(0,i.Uk)("表示不是 vercel 分支")]),(0,i._)("p",null,[(0,i._)("img",{src:"https://file.acs.pw/picGo/2022/02/27/20220227090807.png",alt:"image-20220227090807694",loading:"lazy"})]),(0,i._)("p",null,"例如："),(0,i._)("p",null,[(0,i._)("code",null,"https://vercel.com/new/import?s=https%3A%2F%2Fgithub.com%2Fkkfive%2Fkkapi-open/tree/vercel")]),(0,i._)("p",null,"输入完成后敲击回车。"),(0,i._)("p",null,[(0,i._)("img",{src:"https://file.acs.pw/picGo/2022/02/27/20220227090907.png",alt:"image-20220227090907597",loading:"lazy"})])],-1),b=(0,i._)("p",null,"添加环境变量进行部署",-1),_=(0,i.Uk)("环境变量可能随项目的迭代而增加必填的环境变量，具体请参考"),f=(0,i.Uk)("环境变量"),v=(0,i.uE)('<p><img src="https://file.acs.pw/picGo/2022/02/27/20220227091033.png" alt="image-20220227091033443" loading="lazy">5. 进入 vercel 设置，调整 production 为 vercel 分支</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227094416.png" alt="image-20220227094416620" loading="lazy"></p><ol start="6"><li><p>查看部署</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227094537.png" alt="" loading="lazy"></p><p>如果你部署的环境不是 Production，那么点击旁边的<code>Promote to Production</code>将其发布到 Production 即可。</p></li><li><p>初始化账户</p><p>初始化账户在浏览器访问：<code>你的域名+/api/user/init?userName=xiaokang</code>即可初始化一个账户为<code>xiaokang</code>，密码为<code>123456</code>的账户。 如果不指定用户名则创建一个账户为<code>admin</code>，密码为<code>123456</code>的账户。</p><p>例如:</p><p><code>https://kkapi-open.vercel.app/api/user/init?userName=xiaokang</code></p></li></ol><h2 id="第二种部署姿势-服务器部署" tabindex="-1"><a class="header-anchor" href="#第二种部署姿势-服务器部署" aria-hidden="true">#</a> 第二种部署姿势：服务器部署</h2><ol><li><p>克隆源代码</p><p><code>git clone https://ghproxy.com/https://github.com/kkfive/kkapi-open.git</code></p></li><li><p>安装依赖</p><p><code>yarn install</code></p><p>如果没有<code>yarn</code>则先允许<code>npm i yarn -g</code>进行安装</p></li><li><p>安装 pm2</p><p><code>npm i pm2 -g</code></p></li><li><p>编译项目</p><p><code>yarn build</code></p></li><li><p>配置环境变量</p><p>在项目目录新建文件<code>local.env</code>，将环境变量写入其中即可。例如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>PORT=3000\nDATABASE_URL=mongodb://127.0.0.1:27017/kkpaiopen?authSource=admin\nDATABASE_USER=root\nDATABASE_PASSWORD=root\n# 加密密钥 测试\nSECRETKEY=xxxxxxxxxxxxxxx\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>其中 PORT 表示启动的端口</p></li><li><p>启动项目</p><p><code>pm2 start pm2.json</code></p><p>然后通过命令<code>curl http://127.0.0.1:3000/api/user/init</code>检查是否允许成功</p><p><img src="https://file.acs.pw/picGo/2022/02/27/20220227101623.png" alt="image-20220227101623911" loading="lazy"></p></li><li><p>更新项目</p><p>进入项目并执行一下命令</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">git</span> pull\n<span class="token function">yarn</span> build\npm2 restart pm2.json\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ol><h2 id="第三种部署姿势-docker-部署" tabindex="-1"><a class="header-anchor" href="#第三种部署姿势-docker-部署" aria-hidden="true">#</a> 第三种部署姿势：docker 部署</h2><div class="custom-container warning"><p class="custom-container-title">提示</p><p>撰写中</p></div><h2 id="密码丢失" tabindex="-1"><a class="header-anchor" href="#密码丢失" aria-hidden="true">#</a> 密码丢失</h2><p>如果密码不幸丢失了，那么手动链接数据库将其<code>password</code>字段改为<code>$2a$10$TVk79hQVVpmfu2BOupaIl.lw80Wlwvnpwl0oOjjLH180fi16F9p0K</code>即可重置密码为<code>123456</code><img src="https://file.acs.pw/2022/03/01/7d86163e1fa6d.png" alt="" loading="lazy"></p><h2 id="github-认证" tabindex="-1"><a class="header-anchor" href="#github-认证" aria-hidden="true">#</a> GitHub 认证</h2><p>此功能2022-03-13后更新，新增环境变量<code>GITHUB_CLIENT_SECRET</code>和<code>GITHUB_CLIENT_ID</code>。</p>',11),x=(0,i.Uk)("获取方式参考："),y=(0,i.Uk)("GitHub相关操作"),w={},U=(0,a(3744).Z)(w,[["render",function(e,l){const a=(0,i.up)("ExternalLinkIcon"),w=(0,i.up)("RouterLink");return(0,i.wg)(),(0,i.iD)(i.HY,null,[n,(0,i._)("p",null,[p,(0,i._)("a",t,[r,(0,i.Wm)(a)]),c]),o,(0,i._)("ol",null,[s,(0,i._)("li",null,[(0,i._)("p",null,[d,(0,i._)("a",u,[h,(0,i.Wm)(a)]),m]),g]),k,(0,i._)("li",null,[b,(0,i._)("p",null,[_,(0,i.Wm)(w,{to:"/reference/kkapi/environment.html"},{default:(0,i.w5)((()=>[f])),_:1})])])]),v,(0,i._)("p",null,[x,(0,i.Wm)(w,{to:"/guide/setup/github.html"},{default:(0,i.w5)((()=>[y])),_:1})])],64)}]])}}]);